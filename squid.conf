#############################################################################
#  On a stick squid proxy configuration for basic auth and no auth testing  #
#############################################################################

#set log file rotation to manual controlled renaming via script
#change 0 to a number to ignore our customer crontab job script
#and limit number of days logs kept
logfile_rotate 0

#access log format
ident_lookup_access allow All
logformat custom %sn %{%F:%T}tl.%03tu %6tr %la:%lp %Sh/%<a:%<p %>a:%>p %un %Ss/%03>Hs %<st %rm %ru %mt
access_log /var/log/squid/access.log custom

#What hostname to display instead of FQDN
visible_hostname squidward

# Example rule allowing access from your local networks left in for reference.
#acl localnet src 0.0.0.1-0.255.255.255	# RFC 1122 "this" network (LAN)
#acl localnet src 10.0.0.0/8		# RFC 1918 local private network (LAN)
#acl localnet src 100.64.0.0/10		# RFC 6598 shared address space (CGN)
#acl localnet src 169.254.0.0/16 	# RFC 3927 link-local (directly plugged) machines
#acl localnet src 172.16.0.0/12		# RFC 1918 local private network (LAN)
#acl localnet src 192.168.0.0/16		# RFC 1918 local private network (LAN)
#acl localnet src fc00::/7       	# RFC 4193 local private network range
#acl localnet src fe80::/10      	# RFC 4291 link-local (directly plugged) machines

#our network
acl localnet src 192.168.234.0/24 #home netowork

#ports we're allowing though.... yes, it lets alot through. But then this 
#was only set up for generic testing, not as a full blown production grade....
acl SSL_ports port 443
acl Safe_ports port 80		# http
acl Safe_ports port 21		# ftp
acl Safe_ports port 443		# https
acl Safe_ports port 70		# gopher
acl Safe_ports port 210		# wais
acl Safe_ports port 1025-65535	# unregistered ports
acl Safe_ports port 280		# http-mgmt
acl Safe_ports port 488		# gss-http
acl Safe_ports port 591		# filemaker
acl Safe_ports port 777		# multiling http
acl CONNECT method CONNECT
acl QUERY urlpath_regex cgi-bin \? asp aspx jsp

#cache deny query of jsp, cgi etc
cache deny QUERY

# Deny requests to certain unsafe ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
http_access deny to_localhost

#Basic Auth Setup for 3128 forwarding port
auth_param basic program /usr/lib64/squid/basic_ncsa_auth /etc/squid/.squid_basic_auth_users
auth_param basic children 5
auth_param basic realm Squid Basic Authentication
auth_param basic credentialsttl 2 hours

#no auth  based traffic rules to process first
#so we can drop to these rules for 3129 noauth
acl NoAuthPort myport 3129
acl AuthPort myport 3128

#only allow squidward user to authenticate.
acl auth_users proxy_auth squidward

http_access allow NoAuthPort localnet
http_access deny NoAuthPort
#
http_access allow AuthPort auth_users
http_access deny AuthPort !auth_users

http_access allow localhost

# And finally deny all other access to this proxy
 http_access deny all

# Squid ports
http_port 3128 #forward mode authenticated
http_port 3129 #forward mode unauthenticated
http_port 8080 #required to fix cache error issue causing service crash

# Uncomment and adjust the following to add a disk cache directory.
#cache_dir ufs /var/spool/squid 100 16 256

# Leave coredumps in the first cache dir
coredump_dir /var/spool/squid

#
# Add any of your own refresh_pattern entries above these.
#
refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern .		0	20%	4320
